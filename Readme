Коды доступа к странице Админа =)
На случай если захочется изменить таблицы базы данных с помощью GUI страницы admin 

Login:TestUser
email:Test@Test.ua
Password:Qwerty1234

ПЕРЕД ТЕМ КАК УСТАНАВЛИВАТЬ ПРОЕКТ.

Удостоверьтесь, что на Вашей операционной системе стоить Python 2.7, pip.
Инструкция по установке pip:https://pip.pypa.io/en/stable/installing/#using-linux-package-managers
На Unix-системе также должен быть установлен virtualenv, и с его помощью запустить виртуальное окружение, в котором будет запускаться проект.
Инструкция по установке virtualenv https://virtualenv.pypa.io/en/latest/installation.html
Создать и активированть virtualenv можна введя в консоле следующие команды:

virtualenv -p /usr/bin/python2.7 <name_env>
cd <name_env>
source bin/activate

ИНСТРУКЦИЯ ПО УСТАНОВКЕ ПРОЕКТА

Дальше команды, в консоли Windows и терминале похожи.
Если у вас не установлен git  то нужно скачать и распаковать архив в используемый каталог. 
Вот ссылка на проект: https://github.com/Lairion/AttractTests
Если git установлен, то в консоле(терминале), внутри каталога, пишем следующее:

	git clone https://github.com/Lairion/AttractTests.git <name_folder>

Далее открываем новый созданный каталог(для тех кто скачивал архив это каталог AttractTests)с помощью консоли(терминала):

	cd <name_folder>

Далее в консоли(терминале)пишем следующее:

	pip install -r reg.txt
	
Эта команда установит все нужные пакеты для развертывания проекта.

ТЕСТОВОЕ ЗАДАНИЕ

Все команды вводить в консоле(терминала),указав путь проекта

	ЗАДАНИЕ 1

Есть таблица людей people (id, name) и таблица документов document (id, education, people_id).
Написать модели и выполнить инициализирующие миграции. 
Написать консольный скрипт (https://docs.djangoproject.com/en/1.9/howto/custom-management-commands/), который принимает на вход условие отбора по типу документа (например python должно вернуть всех людей, у которых есть данное образование).

При проверке этой задачи, будет оценено использование django managment, миграций, моделей.
	
	РЕШЕНИЕ:

Структура команды должна иметь такой вид:

python manage.py search_in_db <condition>  --education_srch --name 
 
где:
	<condition> - условие отбора

	--education_srch – поле, в котором будет проводится поиск по условию отбора 

	--name – поле которое вернется при обработке данных

Также поиск можно производить используя такие аргументы: --id_srch , --name_srch
И получать на выходе также можно: --education, --id

В задании я использовал свои значения. Их можно посмотреть написав команду без аргументов.

	python manage.py search_in_db

	ЗАДАНИЕ 2

Написать консольный скрипт по работе с одним из внешних сервисов (на Ваш выбор):
- получение почты с gmail;
- получение погоды по названию города;
- получение курсов валют (с двух сайтов, на Ваш выбор).

	РЕШЕНИЕ:

Я выбрал получения почты с gmail:

Для проверки введите любой e-mail Gmail почты и пароль к нему(предварительно авторизируйтесь в Вашей почте через браузер и дайте доступ, вот ссылка: https://www.google.com/settings/security/lesssecureapps)
 после следующей команды:

	python manage.py inbox_command 

Команда возвращает все письма указанного email.

