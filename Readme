Коды доступа к странице Админа =)
На случай если захочется изменить таблицы базы данных с помощью GUI страницы admin 

Login:TestUser
email: Test@Test.ua
Password:Qwerty1234

ПЕРЕД ТЕМ КАК УСТАНАВЛИВАТЬ ПРОЕКТ.

На Unix-системе.

Все команды вводятся в терминале

Установите установите виртуальное окружение virtualenv c помощью pip:

	pip install virtualenv

Создайте в любом каталоге  на жестком диске, виртуальное окружение и дайте ему любое название:

	virtualenv <name_virt_env>

Откройте папку <name_virt_env>. 

	cd <name_virt_env>

Активируйте виртуальное окружение:

	source bin/activate

после активации строка терминала будет  похожа на эту:

(<name_virt_env>)manul@ZHUK:/media/manul/Instal/Django/AttractTests/AttractTests$

Главное чтобы в конце в скобках было имя Вашего виртуального окружения 

Для Windous достаточно создать каталог в удобном для Вас месте.
Главное только указать в консоле путь к этой папке

ИНСТРУКЦИЯ ПО УСТАНОВКЕ ПРОЕКТА

Дальше команды, в консоли Windous и терминале похожи.
Если у вас не установлен git  то нужно скачать и распаковать архив в используемый каталог. 
Вот ссылка на проэкт: https://github.com/Lairion/AttractTests
Если git установлен, то в консоле(терминале), внутри каталога, пишем следующее:

	git clone https://github.com/Lairion/AttractTests.git <name_folder>

Далее открываем новый созданный каталог(для тех кто скачивал архив это каталог AttractTests)с помощью консоли(терминала):

	cd <name_folder>

Далее пишем следующее:

	pip install -r reg.txt

ТЕХНИЧЕСКОЕ ЗАДАНИЕ

	ЗАДАНИЕ 1

Есть таблица людей people (id, name) и таблица документов document (id, education, people_id).
Написать модели и выполнить инициализирующие миграции. 
Написать консольный скрипт (https://docs.djangoproject.com/en/1.9/howto/custom-management-commands/), который принимает на вход условие отбора по типу документа (например python должно вернуть всех людей, у которых есть данное образование).

При проверке этой задачи, будет оценено использование django managment, миграций, моделей.
	
	РЕШЕНИЕ:

Для теста я вводил свои значения. Для того чтобы посмотреть их, введите:

	python manage.py search_in_db

Для проверки задания вводим следующее:

	python manage.py search_in_db <education>  --education_srch --name 

Также поиск можно производить используя такие аргументы: --id_srch , --name_srch
И получать на выходе также можно: --education, --id

Команда возвращает  name (--name) по указанному условия отбора для типа документа education (--education_srch)  

	ЗАДАНИЕ 2

Написать консольный скрипт по работе с одним из внешних сервисов (на Ваш выбор):
- получение почты с gmail;
- получение погоды по названию города;
- получение курсов валют (с двух сайтов, на Ваш выбор).

	РЕШЕНИЕ:

Я выбрал получения почты с gmail:

Для проверки введите любой e-mail Gmail и пароль к нему(предварительно авторизируйтесь в Вашей почте через браузер и дайте доступ, вот ссылка: https://www.google.com/settings/security/lesssecureapps)
 после следующей команды:

	python manage.py inbox_command 

Команда возвращает все письма по данному email.
